;IR code
;LABEL add []
;LINK  []
;ADDF $P1 $P2 $T1 []
;STOREF $T1 $L1 []
;STOREF $L1 $R []
;RET  []

;LABEL multiply []
;LINK  []
;MULTF $P1 $P2 $T1 []
;STOREF $T1 $L1 []
;STOREF $L1 $R []
;RET  []

;LABEL main []
;LINK  []
;WRITES intro []
;WRITES first []
;READF $L1 []
;WRITES second []
;READF $L2 []
;WRITES third []
;READF $L3 []
;PUSH  []
;PUSH $L1  []
;PUSH $L2  []
;JSR multiply []
;POP  []
;POP  []
;POP $T1 []
;STOREF $T1 $L5 []
;PUSH  []
;PUSH $L5  []
;PUSH $L3  []
;JSR add []
;POP  []
;POP  []
;POP $T2 []
;STOREF $T2 $L4 []
;WRITEF $L1 []
;WRITES star []
;WRITEF $L2 []
;WRITES plus []
;WRITEF $L3 []
;WRITES equal []
;WRITEF $L4 []
;WRITES eol []
;STOREI 0 $T3 []
;STOREI $T3 $R []
;RET  []

;tiny code
str plus "+"
str second "Please enter the second float number: "
str star "*"
str eol "\n"
str equal "="
str third "Please enter the third float number: "
str first "Please enter the first float number: "
str intro "You will be asked for three float numbers\n"
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label add
link 2 
move $7 r0
move $6 r1
addr r1 r0
move r0 r1
move r1 r0
unlnk 
ret 
label multiply
link 2 
move $7 r0
move $6 r1
mulr r1 r0
move r0 r1
move r1 r0
unlnk 
ret 
label main
link 8 
sys writes intro
sys writes first
sys readr r0
sys writes second
sys readr r1
sys writes third
sys readr r2
push 
push r0 
push r1 
push r0 
push r1 
push r2 
push r3 
jsr multiply
pop r3 
pop r2 
pop r1 
pop r0 
pop 
pop 
pop $-6 
move $-6 r3
move r0 $-1
move r3 r0
push 
push r0 
push r2 
push r0 
push r1 
push r2 
push r3 
jsr add
pop r3 
pop r2 
pop r1 
pop r0 
pop 
pop 
pop $-7 
move $-7 r0
move r0 r3
sys writer r0
sys writes star
sys writer r1
sys writes plus
sys writer r2
sys writes equal
sys writer r3
sys writes eol
move 0 r0
move r0 r1
unlnk 
ret 
end
